defaults: &defaults
    working_directory: ~/build
    environment:
        - USER_NAME: "Richard Vodden"
        - USER_EMAIL: "richard@vodden.com"
        - JEKYLL_ENV: "production"
    docker:
        - image: circleci/ruby:2.4.3

version: 2
jobs:
    build:
        << *defaults
        steps:
            - checkout
            - run:
                name: Calculate dependencies into Gemfile.lock
                command: rm Gemfile.lock && bundle lock
            - restore_cache:
                key: bundle_{{ checksum "Gemfile.lock" }}
            - run:
                name: Install Dependencies
                command: bundle install --path vendor/bundle
            - save_cache:
                key: bundle_{{ checksum "Gemfile.lock" }}
                paths:
                    - vendor/bundle
            - run:
                name: Build Website
                command: bundle exec jekyll build
            - persist_to_workspace:
                root: ~/build
                paths:
                    - .git
                    - scripts
                    - Gemfile
                    - vendor/bundle
                    - _site
    test:
        << *defaults
        steps:
            - attach_workspace:
                at: ~/build
            - run:
                name: Install Dependencies
                command: bundle install --path vendor/bundle
            - run:
                name: Validate HTML
                command: bundle exec htmlproofer ./_site --assume-extension --disable-external
    deploy:
        << *defaults
        steps:
            - attach_workspace:
                at: ~/build
            - run:
                name: Deploy
                command: scripts/deploy.sh
workflows:
    version: 2
    build-and-deploy:
        jobs:
            - build:
                filters:
                    branches:
                        only:
                            - draft
            - test:
                filters:
                    branches:
                        only:
                            - draft
                requires:
                    - build
            - deploy:
                filters:
                    branches:
                        only:
                            - draft
                requires:
                    - test
