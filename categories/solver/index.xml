<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>solver on Garbage Collection</title><link>https://vodden.com/categories/solver/</link><description>Recent content in solver on Garbage Collection</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Sat, 02 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://vodden.com/categories/solver/index.xml" rel="self" type="application/rss+xml"/><item><title>Writing a Geometric Solver in Python - Part 3: Fixing our line</title><link>https://vodden.com/posts/pysketcher-geometric-solver-3/</link><pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate><guid>https://vodden.com/posts/pysketcher-geometric-solver-3/</guid><description>So far we have a nice strong framework for expressing geometric constraints as Constraint objects, and we have a clean way of applying these to our geometric objects. We have clear output when we ask the various objects to repr themselves, and we have clear error messages when things don&amp;rsquo;t quite go to plan. Our constraints now support being reciprocal, and if we constraint one object to another that will magically constraint the other object back to the original if we so wish.</description></item><item><title>Writing a Geometric Solver in Python - Part 2: More Modelling</title><link>https://vodden.com/posts/pysketcher-geometric-solver-2/</link><pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate><guid>https://vodden.com/posts/pysketcher-geometric-solver-2/</guid><description>This is the second article in a short series about adding a geometric solver for my PySketcher side project. The basic premise is that instead of having to tell PySketcher exactly where you&amp;rsquo;d like your shapes to be, you&amp;rsquo;ll be able to specify the relationships the shapes have to each other, and PySketcher will be able to work our where they need to go. Have a read of Part 1 for more details, and for an explanation of how we&amp;rsquo;ve built up the model so far.</description></item><item><title>Writing a Geometric Solver in Python - Part 1: Modelling Constraints</title><link>https://vodden.com/posts/constraining-the-point/</link><pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate><guid>https://vodden.com/posts/constraining-the-point/</guid><description>PySketcher is little library which I maintain which makes it simple (hopefully) to draw geometric images. It was originally written by Hans Petter Langtangen, who sadly passed away in 2016, and since 2019 I&amp;rsquo;ve been keeping it up to date and adding features.
Right now, PySketcher only supports absolute positioning of shapes. This means that you have to know exactly where you&amp;rsquo;d like the center of your circle to be and exactly what radius it should have.</description></item></channel></rss>