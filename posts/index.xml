<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Garbage Collection</title><link>https://vodden.com/posts/</link><description>Recent content in Posts on Garbage Collection</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 02 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://vodden.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Day One - One Hundred Days of Practice</title><link>https://vodden.com/posts/one-hundred-days-of-practice/</link><pubDate>Mon, 02 Jan 2023 00:00:00 +0000</pubDate><guid>https://vodden.com/posts/one-hundred-days-of-practice/</guid><description>This is day 1. I start off by trying to establish a decent embouchure across the range, remove the fluffy start from the notes and get a clean octave jump from bottom C to middle C to top C and again from bottom B to middle B to top B. Listening back to this I was slighlty impatient, the sound isn&amp;rsquo;t clean and whilst I manage a few clean octave jumps I don&amp;rsquo;t feel that they&amp;rsquo;re consistent.</description></item><item><title>Writing a Geometric Solver in Python - Part 3: Fixing our line</title><link>https://vodden.com/posts/pysketcher-geometric-solver-3/</link><pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate><guid>https://vodden.com/posts/pysketcher-geometric-solver-3/</guid><description>So far we have a nice strong framework for expressing geometric constraints as Constraint objects, and we have a clean way of applying these to our geometric objects. We have clear output when we ask the various objects to repr themselves, and we have clear error messages when things don&amp;rsquo;t quite go to plan. Our constraints now support being reciprocal, and if we constraint one object to another that will magically constraint the other object back to the original if we so wish.</description></item><item><title>Writing a Geometric Solver in Python - Part 2: More Modelling</title><link>https://vodden.com/posts/pysketcher-geometric-solver-2/</link><pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate><guid>https://vodden.com/posts/pysketcher-geometric-solver-2/</guid><description>This is the second article in a short series about adding a geometric solver for my PySketcher side project. The basic premise is that instead of having to tell PySketcher exactly where you&amp;rsquo;d like your shapes to be, you&amp;rsquo;ll be able to specify the relationships the shapes have to each other, and PySketcher will be able to work our where they need to go. Have a read of Part 1 for more details, and for an explanation of how we&amp;rsquo;ve built up the model so far.</description></item><item><title>Writing a Geometric Solver in Python - Part 1: Modelling Constraints</title><link>https://vodden.com/posts/constraining-the-point/</link><pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate><guid>https://vodden.com/posts/constraining-the-point/</guid><description>PySketcher is little library which I maintain which makes it simple (hopefully) to draw geometric images. It was originally written by Hans Petter Langtangen, who sadly passed away in 2016, and since 2019 I&amp;rsquo;ve been keeping it up to date and adding features.
Right now, PySketcher only supports absolute positioning of shapes. This means that you have to know exactly where you&amp;rsquo;d like the center of your circle to be and exactly what radius it should have.</description></item><item><title>MathJax and Hugo</title><link>https://vodden.com/posts/mathjax-and-hugo/</link><pubDate>Sun, 07 Mar 2021 00:00:00 +0000</pubDate><guid>https://vodden.com/posts/mathjax-and-hugo/</guid><description>The is a marvelous article which explains how to use Hugo and MathJax in close harmony. Unfortunately it was written a while ago and only works for MathJax 2.x. This article updates the content of the original to MathJax &amp;gt; 3.1. The original is still worth reading as it nicely explains the functionality.
Firstly MathJax &amp;gt; 3.0 likes to have pollyfill. So the script inclusion should look like this:
1 2 &amp;lt;script src=&amp;#34;https://polyfill.</description></item><item><title>Let's Git ready to rumble</title><link>https://vodden.com/posts/lets-git-ready-to-rumble/</link><pubDate>Wed, 20 Dec 2017 00:00:00 +0000</pubDate><guid>https://vodden.com/posts/lets-git-ready-to-rumble/</guid><description>Solving it If found myself with a rather strange git problem. As far as I was aware, I was tracking a remote, however when ever I git a git pull, my bash prompt would show me as having commits outstanding.
[voddenr:~/repository] master(4)+i Â± Looking at the commit tree, it would seem that origin/HEAD and origin/master have not been correctly updated:
* f786359 - (HEAD -&amp;gt; master) Merge everything together. (3 hours ago) &amp;lt;Richard Vodden&amp;gt; | * 51955ca - Wrote some code.</description></item></channel></rss>